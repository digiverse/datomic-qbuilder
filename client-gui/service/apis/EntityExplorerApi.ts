/* tslint:disable */
/* eslint-disable */
/**
 * datomic-qbuilder-api
 * TODO...
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface ApiEntityIdGetRequest {
    id: number;
}

export interface ApiEntityLookupGetRequest {
    lookupExpression: string;
}

/**
 * 
 */
export class EntityExplorerApi extends runtime.BaseAPI {

    /**
     */
    async apiEntityIdGetRaw(requestParameters: ApiEntityIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEntityIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/entity/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEntityIdGet(requestParameters: ApiEntityIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEntityIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEntityLookupGetRaw(requestParameters: ApiEntityLookupGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.lookupExpression === null || requestParameters.lookupExpression === undefined) {
            throw new runtime.RequiredError('lookupExpression','Required parameter requestParameters.lookupExpression was null or undefined when calling apiEntityLookupGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.lookupExpression !== undefined) {
            queryParameters['lookupExpression'] = requestParameters.lookupExpression;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/entity/lookup`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEntityLookupGet(requestParameters: ApiEntityLookupGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEntityLookupGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
